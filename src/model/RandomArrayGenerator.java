package model;

import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import java.util.Random;

/**
 * A simple class whose purpose is to permit an array of random numbers to be
 * generated over a user-defined range.
 * 
 * @author jonl
 * @version 0.1
 *
 */
public class RandomArrayGenerator {

    /**
     * The random numbers to store.
     */
    private int[] random_numbers;

    /**
     * The random number generator to use.
     */
    private Random rng;

    /**
     * The property change support object to use when notifying listeners of the
     * model.
     */
    private PropertyChangeSupport notifier;

    /**
     * Constructs a new RandomArrayGenerator instance and initialises the random
     * number generator.
     */
    public RandomArrayGenerator() {
        rng = new Random();
        notifier = new PropertyChangeSupport(this);
    }

    /**
     * Utility method to add an observer using this object's private
     * (encapsulated) property change support object.
     * @param listener the listener to add
     */
    public void addObserver(PropertyChangeListener listener) {
        notifier.addPropertyChangeListener(listener);
    }

    /**
     * This method is called by the GUI control aspect of the delegate to update
     * the model according to user input.  The method generates the specified
     * number of random integers in the given range.
     * @param quantity the quantity of random numbers to generate
     * @param range the range over which to generate random numbers
     */
    public void generateRandomNumbers(int quantity, int range) throws IllegalArgumentException {
        if (quantity <= 0) {
            throw new IllegalArgumentException("Quantity of numbers to generate must be > 0");
        }
        if (range <= 0) {
            throw new IllegalArgumentException("Range for random number generation must be > 0");
        }
        random_numbers = new int[quantity];
        for(int i = 0; i < quantity; i++){
            random_numbers[i] = rng.nextInt(range);
        }
        notifier.firePropertyChange("random_numbers", null, random_numbers);
    }

    /**
     * This method is needed by the GUI to get hold of model state when updating
     * the output in the GUI.
     * @return the random numbers generated by the model
     */
    public int[] getRandomNumbers() {
        return random_numbers;
    }

}
